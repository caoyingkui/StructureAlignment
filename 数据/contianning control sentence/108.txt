Directory dir = new RAMDirectory();
IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.UNLIMITED);
for(int i=0;i<10;i++) {
	Document doc = new Document();
	doc.add(new Field("id", ""+i, Field.Store.NO,Field.Index.NOT_ANALYZED_NO_NORMS));
	doc.add(new Field("text", "aaa", Field.Store.NO, Field.Index.ANALYZED));
	writer.addDocument(doc); }
IndexReader reader = writer.getReader(); // #1
IndexSearcher searcher = new IndexSearcher(reader); // #2
Query query = new TermQuery(new Term("text", "aaa"));
TopDocs docs = searcher.search(query, 1);
assertEquals(10, docs.totalHits); // #3
writer.deleteDocuments(new Term("id", "7")); // #4
Document doc = new Document(); // #5
doc.add(new Field("id", "11", Field.Store.NO, Field.Index.NOT_ANALYZED_NO_NORMS)); // #5
doc.add(new Field("text", "bbb", Field.Store.NO, Field.Index.ANALYZED)); // #5
writer.addDocument(doc); // #5
IndexReader newReader = reader.reopen(); // #6
assertFalse(reader == newReader); // #7
reader.close(); // #8
searcher = new IndexSearcher(newReader);
TopDocs hits = searcher.search(query, 10); // #9
assertEquals(9, hits.totalHits); // #9
query = new TermQuery(new Term("text", "bbb")); // #10
hits = searcher.search(query, 1); // #10
assertEquals(1, hits.totalHits); // #10
newReader.close();
writer.close();

Create near real-time reader.
Wrap reader in IndexSearcher.
Search returns 10 hits.
Delete 1 document. 
Add 1 document.
Reopen the reader.
Reader will be new.
Close the old reader.
Only 9 hits now.
Newly added document is searchable.

8 1
9 2
12 3
13 4
14|15|16|17 5
18 6
19 7
20 8
22|23 9
24|25|26 10
END