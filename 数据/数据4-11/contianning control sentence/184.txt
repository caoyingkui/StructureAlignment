Configuration conf = new Configuration();
conf.addResource("nutch-default.xml");
NutchDocumentAnalyzer analyzer = new NutchDocumentAnalyzer(conf); //1
TokenStream ts = analyzer.tokenStream("content",new StringReader("The quick brownfox..."));
int position = 0;
while(true) { // 2
	Token token = ts.next();
	if (token == null) {
		break;}
	int increment = token.getPositionIncrement();
	if (increment > 0) {
		position = position + increment;
		System.out.println();
		System.out.print(position + ": ");}
	System.out.print("[" +token.termText() + ":" +token.startOffset() + "->" +token.endOffset() + ":" +token.type() + "] ");}
	System.out.println();
	Query nutchQuery = Query.parse("\"the quick brown\"", conf); // 3
	org.apache.lucene.search.Query luceneQuery;
	luceneQuery = new QueryFilters(conf).filter(nutchQuery); // A
	System.out.println("Translated: " + luceneQuery);}

Nutch uses a custom analyzer,  NutchDocumentAnalyzer.
Iterate through the tokens and print the details.
Create the Nutch query, and use Nutchâ€™s  QueryFilters to translate the Query into the rewritten Lucene Query.
Create corresponding translated Lucene Query.

3 1
6 2
17 3
19 4
END